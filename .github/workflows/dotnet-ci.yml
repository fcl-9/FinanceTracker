# This workflow will build a .NET project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-net

name: .NET

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]
  workflow_dispatch:

# For Dorny Test Reporting
permissions:
  checks: write
  contents: write
  pull-requests: write
  packages: write
  attestations: write
  id-token: write
  
env:
  CONTAINER_IMAGE_NAME: "finance-tracker-api"
  REGISTRY: "ghcr.io/fcl-9"
  
jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 8.0.x
    
    - name: Restore dependencies
      run: dotnet restore
      
    - name: Build
      run: dotnet build --no-restore --configuration Release

    - name: Format
      run: dotnet format --verify-no-changes

    - name: Run Package Vulnerabiltiy Scan
      run: dotnet list package --vulnerable
      
    - name: Run tests
      run: dotnet test --configuration Release --no-build --logger "trx;LogFileName=test-results.trx"
        
    - name: Unit Tests Report
      uses: dorny/test-reporter@v1
      with:
        name: unitTests                  
        path: '**/TestResults/*.trx'
        reporter: dotnet-trx      

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Log in to Docker Hub
      uses: docker/login-action@v3
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    
    - name: Extract metadata (tags, labels) for Docker
      id: meta
      uses: docker/metadata-action@9ec57ed1fcdbf14dcef7dfbe97b2010124a938b7
      with:
        images: ${{ env.REGISTRY }}/${{ env.CONTAINER_IMAGE_NAME }}
    
    #- name: Build the Docker image
    #  run: docker build -t ${{ env.REGISTRY }}/${{ env.CONTAINER_IMAGE_NAME }}:${{ github.sha }} .

    #- name: Push the Docker image
    #  run: docker push ${{ env.REGISTRY }}/${{ env.CONTAINER_IMAGE_NAME }}:${{ github.sha }}
    
    - name: Build and push Docker image
      id: push
      uses: docker/build-push-action@v6
      with:
        context: .
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}

    - name: Generate artifact attestation
      uses: actions/attest-build-provenance@v1
      with:
        subject-name: ${{ env.REGISTRY }}/${{ env.CONTAINER_IMAGE_NAME }}
        subject-digest: ${{ steps.push.outputs.digest }}
        push-to-registry: true
